buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.suite'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor('org.projectlombok:lombok')
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.8'
    //json
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'commons-io:commons-io:2.6'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    //sql
    runtimeOnly 'mysql:mysql-connector-java:8.0.25'

    //mongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.data:spring-data-mongodb:3.4.14'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'

    //security && JWT
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //security && JWT TEST
    testImplementation 'org.springframework.security:spring-security-test'

    //actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.0'
    //spring email
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.6.3'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    runtimeOnly 'com.h2database:h2'
    testImplementation 'com.h2database:h2'

    // https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
    implementation 'org.springframework.kafka:spring-kafka:2.8.5'
    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    //AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

}
//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝
tasks.named('test') {
    useJUnitPlatform()
}
